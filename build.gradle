plugins {
    id 'java-library'
    id 'application'
    id 'io.qameta.allure' version '2.8.1'
}

group 'qa.guru.4_13_testops'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {url = "https://dl.bintray.com/qameta/maven-unstable/"}
}

def allureVersion = "2.13.8",
    selenideVersion = "5.19.0",
    junitVersion = "5.8.0-M1",
    hamcrestVersion = "1.3",
    slf4jVersion = "1.7.29",
    javaFakerVersion = "1.0.2",
    ownerVersion = "1.0.12"

compileTestJava {
    options.encoding = 'UTF-8'
}

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true
    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:${selenideVersion}",
            "io.qameta.allure:allure-selenide:${allureVersion}",
            "com.github.javafaker:javafaker:${javaFakerVersion}",
            "org.hamcrest:hamcrest-all:${hamcrestVersion}",
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitVersion}",
            "org.slf4j:slf4j-simple:${slf4jVersion}",
            "io.qameta.allure:allure-java-commons:${allureVersion}",
            "org.aeonbits.owner:owner:${ownerVersion}",
            "io.qameta.allure:allure-ee-junit-platform:3.28.2"
    )
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(Test) {
    systemProperties += System.properties
}

test {
    useJUnitPlatform()
}

task failed_tests(type: Test) {
    useJUnitPlatform {
        includeTags 'failed'
    }
}

tasks.withType(Test) {
    systemProperties += System.properties
    System.setProperty("chromeoptions.prefs", "intl.accept_languages=en")
    System.setProperty("junit.jupiter.extensions.autodetection.enabled", "true")

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }
}